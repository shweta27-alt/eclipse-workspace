package Basic;

/*
max sliding window k 
Eg 5, -2, 7, 3, -4
k=2
Now find the subarray of size k having max sum
Here 7, 3 is the subarray having max sum of 10
k=3
Then subarray of 5 -2 7 produces max sum of 10

*/

public class max_sliding_window {
	public static void main(String[] args) {
		int[] nums= {5, -2, 7, 3, -4};
		int k=2;
		subarraysum(nums, k);
	}
	
	public int subarraysum(int[] nums, int k) {
		 int[] sums = new int[nums.length + 1];
	        int sum = 0;
	        for (int i = 0; i < nums.length; i ++) {
	            sum += nums[i];
	            sums[i + 1] = sum;
	        }
	        int count = 0;
	        for (int i = 0; i < nums.length; i ++) {
	            int pre = sums[i];
	            for (int j = i; j < nums.length; j ++) {
	                int tmp = sums[j + 1] - pre;
	                if (tmp == k) {
	                    count ++;
	                }
	            }
	        }
	        
	        return count;
	}

}
